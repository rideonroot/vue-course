{"version":3,"file":"js/870.827d8564.js","mappings":"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","sources":["webpack://vue-course/./src/libs/utils.js","webpack://vue-course/./src/store/order.js","webpack://vue-course/./src/components/AppLoader.vue","webpack://vue-course/./src/composables/useValidateForm.js","webpack://vue-course/./src/components/AppFormField.vue","webpack://vue-course/./src/components/AppFormInput.vue","webpack://vue-course/./src/components/AppFormInput.vue?4ac3","webpack://vue-course/./src/components/AppFormTextArea.vue","webpack://vue-course/./src/pages/OrderPage.vue","webpack://vue-course/./src/pages/OrderPage.vue?ea5c"],"sourcesContent":["export const removeEmptyFilterFields = (filterFields) => {\n  return Object.entries(filterFields).reduce((acc, [key, value]) => {\n    if (typeof value === \"string\" && value === \"\") return acc;\n    if (typeof value === \"number\" && !value) return acc;\n    if (!value) return acc;\n\n    return { ...acc, [key]: value };\n  }, {});\n};\n\nexport const numberToPrice = (number) => Intl.NumberFormat().format(number);\n\nexport const declensionNumber = (number, words) => {\n  return words[\n    number % 100 > 4 && number % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\n  ];\n};\n\nexport const getMessagesFromInputRules = (rules, value) => {\n  return rules\n    ?.map((validation) => {\n      const result = validation(value);\n      return typeof result === \"string\" ? result : \"\";\n    })\n    .filter((message) => message !== \"\");\n};\n","import { defineStore } from \"pinia\";\nimport { reactive, ref, computed } from \"vue\";\nimport api from \"@/api\";\nimport { useUserStore } from \"./user\";\nimport { useCartStore } from \"./cart\";\n\nexport const useOrderStore = defineStore(\"order\", () => {\n  const user = useUserStore();\n  const { clearCart } = useCartStore();\n  const order = ref({});\n  const errors = reactive({ inputs: {}, message: \"\" });\n  const isLoading = ref(false);\n  const isError = ref(false);\n\n  const itemsCount = computed(() => order.value?.basket?.items?.length ?? 0);\n  const totalPrice = computed(() => {\n    return (\n      order?.value?.basket?.items.reduce((acc, value) => {\n        return acc + value.price * value.quantity;\n      }, 0) ?? 0\n    );\n  });\n\n  const isOrderExist = computed(() => Boolean(order.value?.id));\n\n  const createOrder = async (payload) => {\n    try {\n      errors.message = \"\";\n      errors.inputs = {};\n      isError.value = false;\n      isLoading.value = true;\n\n      order.value = await api.createOrder(payload, user.accessKey);\n\n      clearCart();\n    } catch ({ error }) {\n      errors.message = error?.message ?? \"\";\n      errors.inputs = error?.request ?? {};\n      isError.value = true;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  const getOrder = async (orderId) => {\n    if (isOrderExist.value) return;\n\n    try {\n      isLoading.value = true;\n      isError.value = false;\n\n      order.value = await api.getOrder(orderId, user.accessKey);\n    } catch {\n      isError.value = true;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  return {\n    isLoading,\n    isError,\n    order,\n    itemsCount,\n    totalPrice,\n    errors,\n    createOrder,\n    getOrder,\n  };\n});\n","import script from \"./AppLoader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppLoader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AppLoader.vue?vue&type=style&index=0&id=6cd2041e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/olegscherbal/Documents/development/study/technozavr/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6cd2041e\"]])\n\nexport default __exports__","import { computed } from \"vue\";\nimport { getMessagesFromInputRules } from \"@/libs/utils\";\n\nexport default (rules, form) => {\n  const errors = computed(() => {\n    return Object.entries(form).reduce((acc, [key, value]) => {\n      const msg = getMessagesFromInputRules(rules[key], value)?.[0];\n      return typeof msg === \"string\" ? { ...acc, [key]: msg } : acc;\n    }, {});\n  });\n\n  const isInvalid = computed(() => Object.values(errors.value).some(Boolean));\n\n  return {\n    errors,\n    isInvalid,\n  };\n};\n","import script from \"./AppFormField.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppFormField.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\nimport { computed, onMounted, ref, toRefs } from \"vue\";\nimport { getMessagesFromInputRules } from \"@/libs/utils\";\nimport AppFormField from \"./AppFormField.vue\";\n</script>\n\n<script setup>\nconst emit = defineEmits([\"update:modelValue\"]);\nconst props = defineProps({\n  modelValue: [Number, String],\n  label: String,\n  placeholder: String,\n  type: String,\n  rules: Array,\n  error: String,\n});\nconst { rules, modelValue, error } = toRefs(props);\nconst validateError = ref(\"\");\nconst errorMsg = computed(() => validateError.value || error.value || \"\");\n\nconst validate = (value) => {\n  validateError.value = \"\";\n  const isRequired = !!rules.value?.length;\n  const res = () => getMessagesFromInputRules(rules.value, value)[0] ?? \"\";\n\n  validateError.value = isRequired ? res() : \"\";\n};\n\nconst input = (value) => {\n  validate(value);\n  emit(\"update:modelValue\", value);\n};\n\nonMounted(() => modelValue.value && validate(modelValue.value));\n</script>\n\n<template>\n  <app-form-field :msg=\"errorMsg\" :label=\"label\">\n    <input\n      @input=\"input($event.target.value.trim())\"\n      @blur=\"validate($event.target.value.trim())\"\n      :value=\"modelValue\"\n      :type=\"type\"\n      :placeholder=\"placeholder\"\n      class=\"form__input\"\n    />\n  </app-form-field>\n</template>\n","import script from \"./AppFormInput.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppFormInput.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./AppFormTextArea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppFormTextArea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\nimport { computed, reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { ROUTE_MAIN, ROUTE_CART, ROUTE_ORDER_INFO } from \"@/router/routeNames\";\nimport { useCartStore } from \"@/store/cart\";\nimport { useOrderStore } from \"@/store/order\";\nimport { declensionNumber, numberToPrice } from \"@/libs/utils\";\nimport userValidateForm from \"@/composables/useValidateForm\";\nimport AppFormInput from \"@/components/AppFormInput.vue\";\nimport AppFormTextArea from \"@/components/AppFormTextArea.vue\";\nimport AppLoader from \"@/components/AppLoader.vue\";\n</script>\n\n<script setup>\nconst cartStore = useCartStore();\nconst orderStore = useOrderStore();\nconst router = useRouter();\n\nconst cartInfoMsg = computed(() => {\n  const count = cartStore.itemsCount;\n  const declension = declensionNumber(count, [\"товар\", \"товара\", \"товаров\"]);\n\n  return `${count} ${declension}`;\n});\n\nconst deliveryPrice = 500;\n\nconst order = reactive({\n  name: \"\",\n  address: \"\",\n  phone: \"\",\n  email: \"\",\n  comment: \"\",\n});\n\nconst rules = {\n  name: [\n    (v) => !!v || \"Заполните ФИО\",\n    (v) => /^[a-zа-яё ]+$/i.test(v) || \"Недопустимые символы\",\n  ],\n  address: [(v) => !!v || \"Заполните адрес\"],\n  phone: [\n    (v) => !!v || \"Заполните телефон\",\n    (v) => /^[+\\d]+$/.test(v) || \"Недопустимые символы\",\n  ],\n  email: [\n    (v) => !!v || \"Заполните E-mail\",\n    (v) => /.+@.+\\..+/.test(v) || \"Неккоректно введен E-mail\",\n  ],\n};\n\nconst { isInvalid } = userValidateForm(rules, order);\n\nconst createOrder = async () => {\n  if (isInvalid.value) return;\n\n  await orderStore.createOrder(order);\n\n  if (!orderStore.isError)\n    router.push({\n      name: ROUTE_ORDER_INFO,\n      params: { id: orderStore.order.id },\n    });\n};\n</script>\n\n<template>\n  <app-loader v-if=\"orderStore.isLoading\" app />\n\n  <main class=\"content container\">\n    <div class=\"content__top\">\n      <ul class=\"breadcrumbs\">\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: ROUTE_MAIN }\">\n            Каталог\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: ROUTE_CART }\">\n            Корзина\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <a class=\"breadcrumbs__link\"> Оформление заказа </a>\n        </li>\n      </ul>\n\n      <h1 class=\"content__title\">Корзина</h1>\n      <span class=\"content__info\"> {{ cartInfoMsg }} </span>\n    </div>\n\n    <section class=\"cart\">\n      <form @submit.prevent=\"createOrder\" ref=\"form\" class=\"cart__form form\">\n        <div class=\"cart__field\">\n          <div class=\"cart__data\">\n            <app-form-input\n              v-model=\"order.name\"\n              type=\"text\"\n              placeholder=\"Введите ваше полное имя\"\n              label=\"ФИО*\"\n              :rules=\"rules.name\"\n              :error=\"orderStore.errors.inputs.name\"\n            />\n\n            <app-form-input\n              v-model=\"order.address\"\n              type=\"text\"\n              placeholder=\"Введите ваш адрес\"\n              label=\"Адрес доставки*\"\n              :rules=\"rules.address\"\n              :error=\"orderStore.errors.inputs.address\"\n            />\n\n            <app-form-input\n              v-model=\"order.phone\"\n              type=\"tel\"\n              placeholder=\"Введите ваш телефон\"\n              label=\"Телефон*\"\n              :rules=\"rules.phone\"\n              :error=\"orderStore.errors.inputs.phone\"\n            />\n\n            <app-form-input\n              v-model=\"order.email\"\n              type=\"email\"\n              placeholder=\"Введи ваш Email\"\n              label=\"Email*\"\n              :rules=\"rules.email\"\n              :error=\"orderStore.errors.inputs.email\"\n            />\n\n            <app-form-text-area\n              v-model=\"order.comment\"\n              placeholder=\"Ваши пожелания\"\n              label=\"Комментарий к заказу\"\n            />\n          </div>\n        </div>\n\n        <div class=\"cart__block\">\n          <ul class=\"cart__orders\">\n            <li\n              v-for=\"{ product, quantity } in cartStore.items\"\n              :key=\"product.id\"\n              class=\"cart__order\"\n            >\n              <h3>{{ product.title }}</h3>\n              <b>{{ numberToPrice(product.price * quantity) }} ₽</b>\n              <span>Артикул: {{ product.id }}</span>\n            </li>\n          </ul>\n\n          <div class=\"cart__total\">\n            <p>\n              Доставка: <b>{{ deliveryPrice }} ₽</b>\n            </p>\n            <p>\n              Итого: <b>{{ cartInfoMsg }}</b> на сумму\n              <b>{{ numberToPrice(cartStore.cartTotal + deliveryPrice) }} ₽</b>\n            </p>\n          </div>\n\n          <button\n            :disabled=\"isInvalid\"\n            class=\"cart__button button button--primery\"\n            type=\"submit\"\n          >\n            Оформить заказ\n          </button>\n        </div>\n\n        <div v-if=\"orderStore.isError\" class=\"cart__error form__error-block\">\n          <h4>Заявка не отправлена!</h4>\n          <p>\n            {{\n              orderStore.errors.message\n                ? orderStore.errors.message\n                : \"Похоже произошла ошибка. Попробуйте отправить снова или перезагрузите страницу.\"\n            }}\n          </p>\n        </div>\n      </form>\n    </section>\n  </main>\n</template>\n","import script from \"./OrderPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OrderPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["removeEmptyFilterFields","filterFields","Object","entries","reduce","acc","key","value","numberToPrice","number","Intl","NumberFormat","format","declensionNumber","words","getMessagesFromInputRules","rules","map","validation","result","filter","message","useOrderStore","defineStore","user","useUserStore","clearCart","useCartStore","order","ref","errors","reactive","inputs","isLoading","isError","itemsCount","computed","basket","items","length","totalPrice","price","quantity","isOrderExist","Boolean","id","createOrder","async","api","payload","accessKey","error","request","getOrder","orderId","__exports__","form","msg","isInvalid","values","some","modelValue","toRefs","props","validateError","errorMsg","validate","isRequired","res","input","emit","onMounted","cartStore","orderStore","router","useRouter","cartInfoMsg","count","declension","deliveryPrice","name","address","phone","email","comment","v","test","userValidateForm","push","ROUTE_ORDER_INFO","params"],"sourceRoot":""}