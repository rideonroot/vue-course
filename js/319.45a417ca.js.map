{"version":3,"file":"js/319.45a417ca.js","mappings":"4NAAO,MAAMA,EAA2BC,GAC/BC,OAAOC,QAAQF,GAAcG,QAAO,CAACC,GAAMC,EAAKC,KAChC,kBAAVA,GAAgC,KAAVA,EAAqBF,GACjC,kBAAVE,GAAuBA,IAC7BA,EAEE,IAAKF,EAAK,CAACC,GAAMC,GAHwBF,GAI/C,CAAC,GAGOG,EAAiBC,GAAWC,KAAKC,eAAeC,OAAOH,GAEvDI,EAAmB,CAACJ,EAAQK,IAChCA,EACLL,EAAS,IAAM,GAAKA,EAAS,IAAM,GAC/B,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGA,EAAS,GAAK,EAAIA,EAAS,GAAK,IAI9CM,EAA4B,CAACC,EAAOT,IACxCS,GACHC,KAAKC,IACL,MAAMC,EAASD,EAAWX,GAC1B,MAAyB,kBAAXY,EAAsBA,EAAS,EAA7C,IAEDC,QAAQC,GAAwB,KAAZA,G,sHCpBlB,MAAMC,GAAgBC,EAAAA,EAAAA,IAAY,SAAS,KAChD,MAAMC,GAAOC,EAAAA,EAAAA,MACP,UAAEC,IAAcC,EAAAA,EAAAA,KAChBC,GAAQC,EAAAA,EAAAA,IAAI,CAAC,GACbC,GAASC,EAAAA,EAAAA,IAAS,CAAEC,OAAQ,CAAC,EAAGX,QAAS,KACzCY,GAAYJ,EAAAA,EAAAA,KAAI,GAChBK,GAAUL,EAAAA,EAAAA,KAAI,GAEdM,GAAaC,EAAAA,EAAAA,KAAS,IAAMR,EAAMrB,OAAO8B,QAAQC,OAAOC,QAAU,IAClEC,GAAaJ,EAAAA,EAAAA,KAAS,IAExBR,GAAOrB,OAAO8B,QAAQC,MAAMlC,QAAO,CAACC,EAAKE,IAChCF,EAAME,EAAMkC,MAAQlC,EAAMmC,UAChC,IAAM,IAIPC,GAAeP,EAAAA,EAAAA,KAAS,IAAMQ,QAAQhB,EAAMrB,OAAOsC,MAEnDC,EAAcC,UAClB,IACEjB,EAAOT,QAAU,GACjBS,EAAOE,OAAS,CAAC,EACjBE,EAAQ3B,OAAQ,EAChB0B,EAAU1B,OAAQ,EAElBqB,EAAMrB,YAAcyC,EAAAA,EAAAA,YAAgBC,EAASzB,EAAK0B,WAElDxB,GAOD,CANC,OAAO,MAAEyB,IACTrB,EAAOT,QAAU8B,GAAO9B,SAAW,GACnCS,EAAOE,OAASmB,GAAOC,SAAW,CAAC,EACnClB,EAAQ3B,OAAQ,CACjB,CAbD,QAcE0B,EAAU1B,OAAQ,CACnB,GAGG8C,EAAWN,UACf,IAAIJ,EAAapC,MAEjB,IACE0B,EAAU1B,OAAQ,EAClB2B,EAAQ3B,OAAQ,EAEhBqB,EAAMrB,YAAcyC,EAAAA,EAAAA,SAAaM,EAAS9B,EAAK0B,UAKhD,CAJC,MACAhB,EAAQ3B,OAAQ,CACjB,CAPD,QAQE0B,EAAU1B,OAAQ,CACnB,GAGH,MAAO,CACL0B,YACAC,UACAN,QACAO,aACAK,aACAV,SACAgB,cACAO,WARF,G,2WCrDF,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,y5CCEA,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAAQpC,EAAAA,EAAAA,KAERqC,GAAevB,EAAAA,EAAAA,KAAS,KAC5B,MAAMwB,EAAQF,EAAMvB,WACd0B,GAAahD,EAAAA,EAAAA,IAAiB+C,EAAO,CAAC,QAAS,SAAU,YAE/D,MAAQ,GAAEA,KAASC,GAAnB,IAGIC,EAAgB,IAChBC,GAAa3B,EAAAA,EAAAA,KAAS,IAAM0B,EAAgBJ,EAAMlB,a,OAExDwB,EAAAA,EAAAA,KAAU,KACR,MAAMV,EAAUE,EAAMS,OAAOpB,GAC7Ba,EAAML,SAASC,EAAf,I,qwDCtBF,MAAMC,EAAc,EAEpB,O","sources":["webpack://vue-course/./src/libs/utils.js","webpack://vue-course/./src/store/order.js","webpack://vue-course/./src/components/AppLoader.vue","webpack://vue-course/./src/pages/OrderInfoPage.vue","webpack://vue-course/./src/pages/OrderInfoPage.vue?1780"],"sourcesContent":["export const removeEmptyFilterFields = (filterFields) => {\n  return Object.entries(filterFields).reduce((acc, [key, value]) => {\n    if (typeof value === \"string\" && value === \"\") return acc;\n    if (typeof value === \"number\" && !value) return acc;\n    if (!value) return acc;\n\n    return { ...acc, [key]: value };\n  }, {});\n};\n\nexport const numberToPrice = (number) => Intl.NumberFormat().format(number);\n\nexport const declensionNumber = (number, words) => {\n  return words[\n    number % 100 > 4 && number % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\n  ];\n};\n\nexport const getMessagesFromInputRules = (rules, value) => {\n  return rules\n    ?.map((validation) => {\n      const result = validation(value);\n      return typeof result === \"string\" ? result : \"\";\n    })\n    .filter((message) => message !== \"\");\n};\n","import { defineStore } from \"pinia\";\nimport { reactive, ref, computed } from \"vue\";\nimport api from \"@/api\";\nimport { useUserStore } from \"./user\";\nimport { useCartStore } from \"./cart\";\n\nexport const useOrderStore = defineStore(\"order\", () => {\n  const user = useUserStore();\n  const { clearCart } = useCartStore();\n  const order = ref({});\n  const errors = reactive({ inputs: {}, message: \"\" });\n  const isLoading = ref(false);\n  const isError = ref(false);\n\n  const itemsCount = computed(() => order.value?.basket?.items?.length ?? 0);\n  const totalPrice = computed(() => {\n    return (\n      order?.value?.basket?.items.reduce((acc, value) => {\n        return acc + value.price * value.quantity;\n      }, 0) ?? 0\n    );\n  });\n\n  const isOrderExist = computed(() => Boolean(order.value?.id));\n\n  const createOrder = async (payload) => {\n    try {\n      errors.message = \"\";\n      errors.inputs = {};\n      isError.value = false;\n      isLoading.value = true;\n\n      order.value = await api.createOrder(payload, user.accessKey);\n\n      clearCart();\n    } catch ({ error }) {\n      errors.message = error?.message ?? \"\";\n      errors.inputs = error?.request ?? {};\n      isError.value = true;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  const getOrder = async (orderId) => {\n    if (isOrderExist.value) return;\n\n    try {\n      isLoading.value = true;\n      isError.value = false;\n\n      order.value = await api.getOrder(orderId, user.accessKey);\n    } catch {\n      isError.value = true;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  return {\n    isLoading,\n    isError,\n    order,\n    itemsCount,\n    totalPrice,\n    errors,\n    createOrder,\n    getOrder,\n  };\n});\n","import script from \"./AppLoader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppLoader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AppLoader.vue?vue&type=style&index=0&id=6cd2041e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/olegscherbal/Documents/development/study/technozavr/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6cd2041e\"]])\n\nexport default __exports__","<script>\nimport { useOrderStore } from \"@/store/order\";\nimport { computed, onMounted } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { ROUTE_MAIN, ROUTE_CART, ROUTE_ORDER } from \"@/router/routeNames\";\nimport { declensionNumber, numberToPrice } from \"@/libs/utils\";\nimport AppLoader from \"@/components/AppLoader.vue\";\n</script>\n\n<script setup>\nconst route = useRoute();\nconst store = useOrderStore();\n\nconst orderInfoMsg = computed(() => {\n  const count = store.itemsCount;\n  const declension = declensionNumber(count, [\"товар\", \"товара\", \"товаров\"]);\n\n  return `${count} ${declension}`;\n});\n\nconst deliveryPrice = 500;\nconst orderTotal = computed(() => deliveryPrice + store.totalPrice);\n\nonMounted(() => {\n  const orderId = route.params.id;\n  store.getOrder(orderId);\n});\n</script>\n\n<template>\n  <app-loader v-if=\"store.isLoading\" />\n\n  <main v-else class=\"content container\">\n    <div class=\"content__top\">\n      <ul class=\"breadcrumbs\">\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: ROUTE_MAIN }\">\n            Каталог\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: ROUTE_CART }\">\n            Корзина\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: ROUTE_ORDER }\">\n            Оформление заказа\n          </router-link>\n        </li>\n      </ul>\n\n      <h1 class=\"content__title\">\n        Заказ оформлен <span>№ {{ store.order.id }}</span>\n      </h1>\n    </div>\n\n    <section class=\"cart\">\n      <form class=\"cart__form form\">\n        <div class=\"cart__field\">\n          <p class=\"cart__message\">\n            Благодарим за&nbsp;выбор нашего магазина. На&nbsp;Вашу почту придет\n            письмо с&nbsp;деталями заказа. Наши менеджеры свяжутся с&nbsp;Вами\n            в&nbsp;течение часа для уточнения деталей доставки.\n          </p>\n\n          <ul class=\"dictionary\">\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\"> Получатель </span>\n              <span class=\"dictionary__value\">\n                {{ store.order.name }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\"> Адрес доставки </span>\n              <span class=\"dictionary__value\">\n                {{ store.order.address }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\"> Телефон </span>\n              <span class=\"dictionary__value\"> {{ store.order.phone }} </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\"> Email </span>\n              <span class=\"dictionary__value\"> {{ store.order.email }} </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\"> Способ оплаты </span>\n              <span class=\"dictionary__value\"> картой при получении </span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"cart__block\">\n          <ul v-if=\"store.order.basket?.items\" class=\"cart__orders\">\n            <li\n              v-for=\"{ product, quantity } in store.order.basket.items\"\n              :key=\"product.id\"\n              class=\"cart__order\"\n            >\n              <h3>{{ product.title }}</h3>\n              <b>{{ numberToPrice(product.price * quantity) }} ₽</b>\n              <span>Артикул: {{ product.id }}</span>\n            </li>\n          </ul>\n\n          <div class=\"cart__total\">\n            <p>\n              Доставка: <b>{{ deliveryPrice }} ₽</b>\n            </p>\n            <p>\n              Итого: <b>{{ orderInfoMsg }}</b> на сумму\n              <b>{{ numberToPrice(orderTotal) }} ₽</b>\n            </p>\n          </div>\n        </div>\n      </form>\n    </section>\n  </main>\n</template>\n","import script from \"./OrderInfoPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OrderInfoPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["removeEmptyFilterFields","filterFields","Object","entries","reduce","acc","key","value","numberToPrice","number","Intl","NumberFormat","format","declensionNumber","words","getMessagesFromInputRules","rules","map","validation","result","filter","message","useOrderStore","defineStore","user","useUserStore","clearCart","useCartStore","order","ref","errors","reactive","inputs","isLoading","isError","itemsCount","computed","basket","items","length","totalPrice","price","quantity","isOrderExist","Boolean","id","createOrder","async","api","payload","accessKey","error","request","getOrder","orderId","__exports__","route","useRoute","store","orderInfoMsg","count","declension","deliveryPrice","orderTotal","onMounted","params"],"sourceRoot":""}